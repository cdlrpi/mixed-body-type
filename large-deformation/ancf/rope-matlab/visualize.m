function visualize(l,Time,ne,pe,ve,rho,A,g,Y,II,M,L)

h = figure(1);
vidObj = VideoWriter('ANCF6.avi');

ST = [];
PT = [];
KT = [];
T  = [];
% Animation
x    = 0:0.01:l;
count = 1;
for i = 1:20:length(Time)
    pn   = [];
    knot = [];

    for n = 1:ne
        pr = [];
        for j = 1:length(x)
            
            s1 = 1 - 3 * x(j) ^ 2 / l ^ 2 + 2 * x(j) ^ 3 / l ^ 3;
            s2 = x(j) / l - 2 * x(j) ^ 2 / l ^ 2 + x(j) ^ 3 / l ^ 3;
            s3 = 3 * x(j) ^ 2 / l ^ 2 - 2 * x(j) ^ 3 / l ^ 3;
            s4 = x(j) ^ 3 / l ^ 3 - x(j) ^ 2 / l ^ 2;
            
            S  =   [s1,  0, s2*l,    0, s3,  0, s4*l,    0;
                0,   s1,    0, s2*l,  0, s3,    0, s4*l];
            
            r      = S*pe(:,n,i);
            dx1(j) = r(1);
            dy1(j) = r(2);
            p11    = [dx1(j) ; dy1(j)];
            pr     = [pr,p11];
        end
        knot   = [knot,r];
        pn     = [pn,pr];
        
        e1  = pe(1,n,i);
        e2  = pe(2,n,i);
        e3  = pe(3,n,i);
        e4  = pe(4,n,i);
        e5  = pe(5,n,i);
        e6  = pe(6,n,i);
        e7  = pe(7,n,i);
        e8  = pe(8,n,i);
        
        PE(n) = (rho * A * g * (e4 / l ^ 2 + 2 * e2 / l ^ 3 - 2 * e6 / l ^ 3 + e8 / l ^ 2) * l ^ 4) / 0.4e1 + (rho * A * g * (-3 * e2 / l ^ 2 + 3 * e6 / l ^ 2 - 2 * e4 / l - e8 / l) * l ^ 3) / 0.3e1 + (rho * A * g * e4 * l ^ 2) / 0.2e1 + (rho * A * g * e2 * l);
        SE(n) = Y * A * ((((-36 * e1 / l ^ 6 + 36 * (e5 - l) / l ^ 6 - 6 * (3 * e3 - 3) / l ^ 5 - 6 * (3 * e7 - 3) / l ^ 5) * (e5 + l)) / 0.2e1 + (((9 * e3 - 9) / l ^ 4 - 6 * (3 * e5 - 3 * l) / l ^ 5 + 18 * e1 / l ^ 5 + 3 * (3 * e7 - 3) / l ^ 4) * (e3 + 1)) / 0.2e1 + ((-36 * e2 / l ^ 6 + 36 * e6 / l ^ 6 - 18 * e4 / l ^ 5 - 18 * e8 / l ^ 5) * e6) / 0.2e1 + ((36 * e1 / l ^ 6 - 36 * (e5 - l) / l ^ 6 + 6 * (3 * e3 - 3) / l ^ 5 + 6 * (3 * e7 - 3) / l ^ 5) * e1) / 0.2e1 + ((18 * e1 / l ^ 5 - 6 * (3 * e5 - 3 * l) / l ^ 5 + 3 * (3 * e3 - 3) / l ^ 4 + (9 * e7 - 9) / l ^ 4) * (e7 + 1)) / 0.2e1 + ((9 * e4 / l ^ 4 - 18 * e6 / l ^ 5 + 18 * e2 / l ^ 5 + 9 * e8 / l ^ 4) * e4) / 0.2e1 + ((36 * e2 / l ^ 6 - 36 * e6 / l ^ 6 + 18 * e4 / l ^ 5 + 18 * e8 / l ^ 5) * e2) / 0.2e1 + ((9 * e4 / l ^ 4 - 18 * e6 / l ^ 5 + 18 * e2 / l ^ 5 + 9 * e8 / l ^ 4) * e8) / 0.2e1) ^ 2 * (l ^ 9) / 0.9e1 + (((72 * e2 / l ^ 5 + 42 * e4 / l ^ 4 - 72 * e6 / l ^ 5 + 30 * e8 / l ^ 4) * e6) / 0.2e1 + ((-24 * e4 / l ^ 3 + 42 * e6 / l ^ 4 - 18 * e8 / l ^ 3 - 42 * e2 / l ^ 4) * e4) / 0.2e1 + ((-30 * e1 / l ^ 4 - 12 * (e3 - 1) / l ^ 3 - 2 * (3 * e3 - 3) / l ^ 3 - 6 * (-3 * (e5 - l) * l + 2 * (-e5 + l) * l) / l ^ 5 - 12 * (e7 - 1) / l ^ 3) * (e7 + 1)) / 0.2e1 + ((72 * e1 / l ^ 5 + 24 * (e3 - 1) / l ^ 4 + 6 * (3 * e3 - 3) / l ^ 4 - 72 * (e5 - l) / l ^ 5 - 6 * (-3 * (e7 - 1) * l + 2 * (-e7 + 1) * l) / l ^ 5) * (e5 + l)) / 0.2e1 + ((-30 * e2 / l ^ 4 - 18 * e4 / l ^ 3 + 30 * e6 / l ^ 4 - 12 * e8 / l ^ 3) * e8) / 0.2e1 + ((-24 * (e3 - 1) / l ^ 3 + 24 * (e5 - l) / l ^ 4 + 6 * (3 * e5 - 3 * l) / l ^ 4 - 12 * (e7 - 1) / l ^ 3 - 2 * (3 * e7 - 3) / l ^ 3 - 42 * e1 / l ^ 4) * (e3 + 1)) / 0.2e1 + ((-72 * e1 / l ^ 5 - 24 * (e3 - 1) / l ^ 4 - 6 * (3 * e3 - 3) / l ^ 4 + 72 * (e5 - l) / l ^ 5 + 6 * (-3 * (e7 - 1) * l + 2 * (-e7 + 1) * l) / l ^ 5) * e1) / 0.2e1 + ((-72 * e2 / l ^ 5 - 42 * e4 / l ^ 4 + 72 * e6 / l ^ 5 - 30 * e8 / l ^ 4) * e2) / 0.2e1) * (((-36 * e1 / l ^ 6 + 36 * (e5 - l) / l ^ 6 - 6 * (3 * e3 - 3) / l ^ 5 - 6 * (3 * e7 - 3) / l ^ 5) * (e5 + l)) / 0.2e1 + (((9 * e3 - 9) / l ^ 4 - 6 * (3 * e5 - 3 * l) / l ^ 5 + 18 * e1 / l ^ 5 + 3 * (3 * e7 - 3) / l ^ 4) * (e3 + 1)) / 0.2e1 + ((-36 * e2 / l ^ 6 + 36 * e6 / l ^ 6 - 18 * e4 / l ^ 5 - 18 * e8 / l ^ 5) * e6) / 0.2e1 + ((36 * e1 / l ^ 6 - 36 * (e5 - l) / l ^ 6 + 6 * (3 * e3 - 3) / l ^ 5 + 6 * (3 * e7 - 3) / l ^ 5) * e1) / 0.2e1 + ((18 * e1 / l ^ 5 - 6 * (3 * e5 - 3 * l) / l ^ 5 + 3 * (3 * e3 - 3) / l ^ 4 + (9 * e7 - 9) / l ^ 4) * (e7 + 1)) / 0.2e1 + ((9 * e4 / l ^ 4 - 18 * e6 / l ^ 5 + 18 * e2 / l ^ 5 + 9 * e8 / l ^ 4) * e4) / 0.2e1 + ((36 * e2 / l ^ 6 - 36 * e6 / l ^ 6 + 18 * e4 / l ^ 5 + 18 * e8 / l ^ 5) * e2) / 0.2e1 + ((9 * e4 / l ^ 4 - 18 * e6 / l ^ 5 + 18 * e2 / l ^ 5 + 9 * e8 / l ^ 4) * e8) / 0.2e1) * (l ^ 8) / 0.4e1 + (0.2e1 * (((-36 * e2 / l ^ 4 - 12 * e8 / l ^ 3 - 30 * e4 / l ^ 3 + 36 * e6 / l ^ 4) * e6) / 0.2e1 + ((12 * e1 / l ^ 3 + 4 * (e7 - 1) / l ^ 2 + 11 * (e3 - 1) / l ^ 2 - 12 * (e5 - l) / l ^ 3) * (e7 + 1)) / 0.2e1 + ((22 * e4 / l ^ 2 - 30 * e6 / l ^ 3 + 11 * e8 / l ^ 2 + 30 * e2 / l ^ 3) * e4) / 0.2e1 + ((12 * e2 / l ^ 3 + 4 * e8 / l ^ 2 + 11 * e4 / l ^ 2 - 12 * e6 / l ^ 3) * e8) / 0.2e1 + ((-36 * e1 / l ^ 4 - 12 * (e7 - 1) / l ^ 3 - 30 * (e3 - 1) / l ^ 3 + 36 * (e5 - l) / l ^ 4) * (e5 + l)) / 0.2e1 + ((22 * (e3 - 1) / l ^ 2 - 30 * (e5 - l) / l ^ 3 + 11 * (e7 - 1) / l ^ 2 + 30 * e1 / l ^ 3) * (e3 + 1)) / 0.2e1 + ((36 * e1 / l ^ 4 + 12 * (e7 - 1) / l ^ 3 + 30 * (e3 - 1) / l ^ 3 - 36 * (e5 - l) / l ^ 4) * e1) / 0.2e1 + ((36 * e2 / l ^ 4 + 12 * e8 / l ^ 3 + 30 * e4 / l ^ 3 - 36 * e6 / l ^ 4) * e2) / 0.2e1) * (((-36 * e1 / l ^ 6 + 36 * (e5 - l) / l ^ 6 - 6 * (3 * e3 - 3) / l ^ 5 - 6 * (3 * e7 - 3) / l ^ 5) * (e5 + l)) / 0.2e1 + (((9 * e3 - 9) / l ^ 4 - 6 * (3 * e5 - 3 * l) / l ^ 5 + 18 * e1 / l ^ 5 + 3 * (3 * e7 - 3) / l ^ 4) * (e3 + 1)) / 0.2e1 + ((-36 * e2 / l ^ 6 + 36 * e6 / l ^ 6 - 18 * e4 / l ^ 5 - 18 * e8 / l ^ 5) * e6) / 0.2e1 + ((36 * e1 / l ^ 6 - 36 * (e5 - l) / l ^ 6 + 6 * (3 * e3 - 3) / l ^ 5 + 6 * (3 * e7 - 3) / l ^ 5) * e1) / 0.2e1 + ((18 * e1 / l ^ 5 - 6 * (3 * e5 - 3 * l) / l ^ 5 + 3 * (3 * e3 - 3) / l ^ 4 + (9 * e7 - 9) / l ^ 4) * (e7 + 1)) / 0.2e1 + ((9 * e4 / l ^ 4 - 18 * e6 / l ^ 5 + 18 * e2 / l ^ 5 + 9 * e8 / l ^ 4) * e4) / 0.2e1 + ((36 * e2 / l ^ 6 - 36 * e6 / l ^ 6 + 18 * e4 / l ^ 5 + 18 * e8 / l ^ 5) * e2) / 0.2e1 + ((9 * e4 / l ^ 4 - 18 * e6 / l ^ 5 + 18 * e2 / l ^ 5 + 9 * e8 / l ^ 4) * e8) / 0.2e1) + (((72 * e2 / l ^ 5 + 42 * e4 / l ^ 4 - 72 * e6 / l ^ 5 + 30 * e8 / l ^ 4) * e6) / 0.2e1 + ((-24 * e4 / l ^ 3 + 42 * e6 / l ^ 4 - 18 * e8 / l ^ 3 - 42 * e2 / l ^ 4) * e4) / 0.2e1 + ((-30 * e1 / l ^ 4 - 12 * (e3 - 1) / l ^ 3 - 2 * (3 * e3 - 3) / l ^ 3 - 6 * (-3 * (e5 - l) * l + 2 * (-e5 + l) * l) / l ^ 5 - 12 * (e7 - 1) / l ^ 3) * (e7 + 1)) / 0.2e1 + ((72 * e1 / l ^ 5 + 24 * (e3 - 1) / l ^ 4 + 6 * (3 * e3 - 3) / l ^ 4 - 72 * (e5 - l) / l ^ 5 - 6 * (-3 * (e7 - 1) * l + 2 * (-e7 + 1) * l) / l ^ 5) * (e5 + l)) / 0.2e1 + ((-30 * e2 / l ^ 4 - 18 * e4 / l ^ 3 + 30 * e6 / l ^ 4 - 12 * e8 / l ^ 3) * e8) / 0.2e1 + ((-24 * (e3 - 1) / l ^ 3 + 24 * (e5 - l) / l ^ 4 + 6 * (3 * e5 - 3 * l) / l ^ 4 - 12 * (e7 - 1) / l ^ 3 - 2 * (3 * e7 - 3) / l ^ 3 - 42 * e1 / l ^ 4) * (e3 + 1)) / 0.2e1 + ((-72 * e1 / l ^ 5 - 24 * (e3 - 1) / l ^ 4 - 6 * (3 * e3 - 3) / l ^ 4 + 72 * (e5 - l) / l ^ 5 + 6 * (-3 * (e7 - 1) * l + 2 * (-e7 + 1) * l) / l ^ 5) * e1) / 0.2e1 + ((-72 * e2 / l ^ 5 - 42 * e4 / l ^ 4 + 72 * e6 / l ^ 5 - 30 * e8 / l ^ 4) * e2) / 0.2e1) ^ 2) * (l ^ 7) / 0.7e1 + (0.2e1 * (((-8 * e4 / l - 6 * e2 / l ^ 2 + 6 * e6 / l ^ 2 - 2 * e8 / l) * e4) / 0.2e1 + (3 * e4 / l ^ 2 * e6) + (3 * (e3 - 1) / l ^ 2 * (e5 + l)) - ((e3 - 1) / l * (e7 + 1)) - (3 * e4 / l ^ 2 * e2) + ((-8 * (e3 - 1) / l - 6 * e1 / l ^ 2 + 6 * (e5 - l) / l ^ 2 - 2 * (e7 - 1) / l) * (e3 + 1)) / 0.2e1 - (3 * (e3 - 1) / l ^ 2 * e1) - (e4 / l * e8)) * (((-36 * e1 / l ^ 6 + 36 * (e5 - l) / l ^ 6 - 6 * (3 * e3 - 3) / l ^ 5 - 6 * (3 * e7 - 3) / l ^ 5) * (e5 + l)) / 0.2e1 + (((9 * e3 - 9) / l ^ 4 - 6 * (3 * e5 - 3 * l) / l ^ 5 + 18 * e1 / l ^ 5 + 3 * (3 * e7 - 3) / l ^ 4) * (e3 + 1)) / 0.2e1 + ((-36 * e2 / l ^ 6 + 36 * e6 / l ^ 6 - 18 * e4 / l ^ 5 - 18 * e8 / l ^ 5) * e6) / 0.2e1 + ((36 * e1 / l ^ 6 - 36 * (e5 - l) / l ^ 6 + 6 * (3 * e3 - 3) / l ^ 5 + 6 * (3 * e7 - 3) / l ^ 5) * e1) / 0.2e1 + ((18 * e1 / l ^ 5 - 6 * (3 * e5 - 3 * l) / l ^ 5 + 3 * (3 * e3 - 3) / l ^ 4 + (9 * e7 - 9) / l ^ 4) * (e7 + 1)) / 0.2e1 + ((9 * e4 / l ^ 4 - 18 * e6 / l ^ 5 + 18 * e2 / l ^ 5 + 9 * e8 / l ^ 4) * e4) / 0.2e1 + ((36 * e2 / l ^ 6 - 36 * e6 / l ^ 6 + 18 * e4 / l ^ 5 + 18 * e8 / l ^ 5) * e2) / 0.2e1 + ((9 * e4 / l ^ 4 - 18 * e6 / l ^ 5 + 18 * e2 / l ^ 5 + 9 * e8 / l ^ 4) * e8) / 0.2e1) + 0.2e1 * (((-36 * e2 / l ^ 4 - 12 * e8 / l ^ 3 - 30 * e4 / l ^ 3 + 36 * e6 / l ^ 4) * e6) / 0.2e1 + ((12 * e1 / l ^ 3 + 4 * (e7 - 1) / l ^ 2 + 11 * (e3 - 1) / l ^ 2 - 12 * (e5 - l) / l ^ 3) * (e7 + 1)) / 0.2e1 + ((22 * e4 / l ^ 2 - 30 * e6 / l ^ 3 + 11 * e8 / l ^ 2 + 30 * e2 / l ^ 3) * e4) / 0.2e1 + ((12 * e2 / l ^ 3 + 4 * e8 / l ^ 2 + 11 * e4 / l ^ 2 - 12 * e6 / l ^ 3) * e8) / 0.2e1 + ((-36 * e1 / l ^ 4 - 12 * (e7 - 1) / l ^ 3 - 30 * (e3 - 1) / l ^ 3 + 36 * (e5 - l) / l ^ 4) * (e5 + l)) / 0.2e1 + ((22 * (e3 - 1) / l ^ 2 - 30 * (e5 - l) / l ^ 3 + 11 * (e7 - 1) / l ^ 2 + 30 * e1 / l ^ 3) * (e3 + 1)) / 0.2e1 + ((36 * e1 / l ^ 4 + 12 * (e7 - 1) / l ^ 3 + 30 * (e3 - 1) / l ^ 3 - 36 * (e5 - l) / l ^ 4) * e1) / 0.2e1 + ((36 * e2 / l ^ 4 + 12 * e8 / l ^ 3 + 30 * e4 / l ^ 3 - 36 * e6 / l ^ 4) * e2) / 0.2e1) * (((72 * e2 / l ^ 5 + 42 * e4 / l ^ 4 - 72 * e6 / l ^ 5 + 30 * e8 / l ^ 4) * e6) / 0.2e1 + ((-24 * e4 / l ^ 3 + 42 * e6 / l ^ 4 - 18 * e8 / l ^ 3 - 42 * e2 / l ^ 4) * e4) / 0.2e1 + ((-30 * e1 / l ^ 4 - 12 * (e3 - 1) / l ^ 3 - 2 * (3 * e3 - 3) / l ^ 3 - 6 * (-3 * (e5 - l) * l + 2 * (-e5 + l) * l) / l ^ 5 - 12 * (e7 - 1) / l ^ 3) * (e7 + 1)) / 0.2e1 + ((72 * e1 / l ^ 5 + 24 * (e3 - 1) / l ^ 4 + 6 * (3 * e3 - 3) / l ^ 4 - 72 * (e5 - l) / l ^ 5 - 6 * (-3 * (e7 - 1) * l + 2 * (-e7 + 1) * l) / l ^ 5) * (e5 + l)) / 0.2e1 + ((-30 * e2 / l ^ 4 - 18 * e4 / l ^ 3 + 30 * e6 / l ^ 4 - 12 * e8 / l ^ 3) * e8) / 0.2e1 + ((-24 * (e3 - 1) / l ^ 3 + 24 * (e5 - l) / l ^ 4 + 6 * (3 * e5 - 3 * l) / l ^ 4 - 12 * (e7 - 1) / l ^ 3 - 2 * (3 * e7 - 3) / l ^ 3 - 42 * e1 / l ^ 4) * (e3 + 1)) / 0.2e1 + ((-72 * e1 / l ^ 5 - 24 * (e3 - 1) / l ^ 4 - 6 * (3 * e3 - 3) / l ^ 4 + 72 * (e5 - l) / l ^ 5 + 6 * (-3 * (e7 - 1) * l + 2 * (-e7 + 1) * l) / l ^ 5) * e1) / 0.2e1 + ((-72 * e2 / l ^ 5 - 42 * e4 / l ^ 4 + 72 * e6 / l ^ 5 - 30 * e8 / l ^ 4) * e2) / 0.2e1)) * (l ^ 6) / 0.6e1 + (0.2e1 * ((e4 ^ 2) / 0.2e1 + ((e3 - 1) * (e3 + 1)) / 0.2e1) * (((-36 * e1 / l ^ 6 + 36 * (e5 - l) / l ^ 6 - 6 * (3 * e3 - 3) / l ^ 5 - 6 * (3 * e7 - 3) / l ^ 5) * (e5 + l)) / 0.2e1 + (((9 * e3 - 9) / l ^ 4 - 6 * (3 * e5 - 3 * l) / l ^ 5 + 18 * e1 / l ^ 5 + 3 * (3 * e7 - 3) / l ^ 4) * (e3 + 1)) / 0.2e1 + ((-36 * e2 / l ^ 6 + 36 * e6 / l ^ 6 - 18 * e4 / l ^ 5 - 18 * e8 / l ^ 5) * e6) / 0.2e1 + ((36 * e1 / l ^ 6 - 36 * (e5 - l) / l ^ 6 + 6 * (3 * e3 - 3) / l ^ 5 + 6 * (3 * e7 - 3) / l ^ 5) * e1) / 0.2e1 + ((18 * e1 / l ^ 5 - 6 * (3 * e5 - 3 * l) / l ^ 5 + 3 * (3 * e3 - 3) / l ^ 4 + (9 * e7 - 9) / l ^ 4) * (e7 + 1)) / 0.2e1 + ((9 * e4 / l ^ 4 - 18 * e6 / l ^ 5 + 18 * e2 / l ^ 5 + 9 * e8 / l ^ 4) * e4) / 0.2e1 + ((36 * e2 / l ^ 6 - 36 * e6 / l ^ 6 + 18 * e4 / l ^ 5 + 18 * e8 / l ^ 5) * e2) / 0.2e1 + ((9 * e4 / l ^ 4 - 18 * e6 / l ^ 5 + 18 * e2 / l ^ 5 + 9 * e8 / l ^ 4) * e8) / 0.2e1) + 0.2e1 * (((-8 * e4 / l - 6 * e2 / l ^ 2 + 6 * e6 / l ^ 2 - 2 * e8 / l) * e4) / 0.2e1 + (3 * e4 / l ^ 2 * e6) + (3 * (e3 - 1) / l ^ 2 * (e5 + l)) - ((e3 - 1) / l * (e7 + 1)) - (3 * e4 / l ^ 2 * e2) + ((-8 * (e3 - 1) / l - 6 * e1 / l ^ 2 + 6 * (e5 - l) / l ^ 2 - 2 * (e7 - 1) / l) * (e3 + 1)) / 0.2e1 - (3 * (e3 - 1) / l ^ 2 * e1) - (e4 / l * e8)) * (((72 * e2 / l ^ 5 + 42 * e4 / l ^ 4 - 72 * e6 / l ^ 5 + 30 * e8 / l ^ 4) * e6) / 0.2e1 + ((-24 * e4 / l ^ 3 + 42 * e6 / l ^ 4 - 18 * e8 / l ^ 3 - 42 * e2 / l ^ 4) * e4) / 0.2e1 + ((-30 * e1 / l ^ 4 - 12 * (e3 - 1) / l ^ 3 - 2 * (3 * e3 - 3) / l ^ 3 - 6 * (-3 * (e5 - l) * l + 2 * (-e5 + l) * l) / l ^ 5 - 12 * (e7 - 1) / l ^ 3) * (e7 + 1)) / 0.2e1 + ((72 * e1 / l ^ 5 + 24 * (e3 - 1) / l ^ 4 + 6 * (3 * e3 - 3) / l ^ 4 - 72 * (e5 - l) / l ^ 5 - 6 * (-3 * (e7 - 1) * l + 2 * (-e7 + 1) * l) / l ^ 5) * (e5 + l)) / 0.2e1 + ((-30 * e2 / l ^ 4 - 18 * e4 / l ^ 3 + 30 * e6 / l ^ 4 - 12 * e8 / l ^ 3) * e8) / 0.2e1 + ((-24 * (e3 - 1) / l ^ 3 + 24 * (e5 - l) / l ^ 4 + 6 * (3 * e5 - 3 * l) / l ^ 4 - 12 * (e7 - 1) / l ^ 3 - 2 * (3 * e7 - 3) / l ^ 3 - 42 * e1 / l ^ 4) * (e3 + 1)) / 0.2e1 + ((-72 * e1 / l ^ 5 - 24 * (e3 - 1) / l ^ 4 - 6 * (3 * e3 - 3) / l ^ 4 + 72 * (e5 - l) / l ^ 5 + 6 * (-3 * (e7 - 1) * l + 2 * (-e7 + 1) * l) / l ^ 5) * e1) / 0.2e1 + ((-72 * e2 / l ^ 5 - 42 * e4 / l ^ 4 + 72 * e6 / l ^ 5 - 30 * e8 / l ^ 4) * e2) / 0.2e1) + (((-36 * e2 / l ^ 4 - 12 * e8 / l ^ 3 - 30 * e4 / l ^ 3 + 36 * e6 / l ^ 4) * e6) / 0.2e1 + ((12 * e1 / l ^ 3 + 4 * (e7 - 1) / l ^ 2 + 11 * (e3 - 1) / l ^ 2 - 12 * (e5 - l) / l ^ 3) * (e7 + 1)) / 0.2e1 + ((22 * e4 / l ^ 2 - 30 * e6 / l ^ 3 + 11 * e8 / l ^ 2 + 30 * e2 / l ^ 3) * e4) / 0.2e1 + ((12 * e2 / l ^ 3 + 4 * e8 / l ^ 2 + 11 * e4 / l ^ 2 - 12 * e6 / l ^ 3) * e8) / 0.2e1 + ((-36 * e1 / l ^ 4 - 12 * (e7 - 1) / l ^ 3 - 30 * (e3 - 1) / l ^ 3 + 36 * (e5 - l) / l ^ 4) * (e5 + l)) / 0.2e1 + ((22 * (e3 - 1) / l ^ 2 - 30 * (e5 - l) / l ^ 3 + 11 * (e7 - 1) / l ^ 2 + 30 * e1 / l ^ 3) * (e3 + 1)) / 0.2e1 + ((36 * e1 / l ^ 4 + 12 * (e7 - 1) / l ^ 3 + 30 * (e3 - 1) / l ^ 3 - 36 * (e5 - l) / l ^ 4) * e1) / 0.2e1 + ((36 * e2 / l ^ 4 + 12 * e8 / l ^ 3 + 30 * e4 / l ^ 3 - 36 * e6 / l ^ 4) * e2) / 0.2e1) ^ 2) * (l ^ 5) / 0.5e1 + (0.2e1 * ((e4 ^ 2) / 0.2e1 + ((e3 - 1) * (e3 + 1)) / 0.2e1) * (((72 * e2 / l ^ 5 + 42 * e4 / l ^ 4 - 72 * e6 / l ^ 5 + 30 * e8 / l ^ 4) * e6) / 0.2e1 + ((-24 * e4 / l ^ 3 + 42 * e6 / l ^ 4 - 18 * e8 / l ^ 3 - 42 * e2 / l ^ 4) * e4) / 0.2e1 + ((-30 * e1 / l ^ 4 - 12 * (e3 - 1) / l ^ 3 - 2 * (3 * e3 - 3) / l ^ 3 - 6 * (-3 * (e5 - l) * l + 2 * (-e5 + l) * l) / l ^ 5 - 12 * (e7 - 1) / l ^ 3) * (e7 + 1)) / 0.2e1 + ((72 * e1 / l ^ 5 + 24 * (e3 - 1) / l ^ 4 + 6 * (3 * e3 - 3) / l ^ 4 - 72 * (e5 - l) / l ^ 5 - 6 * (-3 * (e7 - 1) * l + 2 * (-e7 + 1) * l) / l ^ 5) * (e5 + l)) / 0.2e1 + ((-30 * e2 / l ^ 4 - 18 * e4 / l ^ 3 + 30 * e6 / l ^ 4 - 12 * e8 / l ^ 3) * e8) / 0.2e1 + ((-24 * (e3 - 1) / l ^ 3 + 24 * (e5 - l) / l ^ 4 + 6 * (3 * e5 - 3 * l) / l ^ 4 - 12 * (e7 - 1) / l ^ 3 - 2 * (3 * e7 - 3) / l ^ 3 - 42 * e1 / l ^ 4) * (e3 + 1)) / 0.2e1 + ((-72 * e1 / l ^ 5 - 24 * (e3 - 1) / l ^ 4 - 6 * (3 * e3 - 3) / l ^ 4 + 72 * (e5 - l) / l ^ 5 + 6 * (-3 * (e7 - 1) * l + 2 * (-e7 + 1) * l) / l ^ 5) * e1) / 0.2e1 + ((-72 * e2 / l ^ 5 - 42 * e4 / l ^ 4 + 72 * e6 / l ^ 5 - 30 * e8 / l ^ 4) * e2) / 0.2e1) + 0.2e1 * (((-8 * e4 / l - 6 * e2 / l ^ 2 + 6 * e6 / l ^ 2 - 2 * e8 / l) * e4) / 0.2e1 + (3 * e4 / l ^ 2 * e6) + (3 * (e3 - 1) / l ^ 2 * (e5 + l)) - ((e3 - 1) / l * (e7 + 1)) - (3 * e4 / l ^ 2 * e2) + ((-8 * (e3 - 1) / l - 6 * e1 / l ^ 2 + 6 * (e5 - l) / l ^ 2 - 2 * (e7 - 1) / l) * (e3 + 1)) / 0.2e1 - (3 * (e3 - 1) / l ^ 2 * e1) - (e4 / l * e8)) * (((-36 * e2 / l ^ 4 - 12 * e8 / l ^ 3 - 30 * e4 / l ^ 3 + 36 * e6 / l ^ 4) * e6) / 0.2e1 + ((12 * e1 / l ^ 3 + 4 * (e7 - 1) / l ^ 2 + 11 * (e3 - 1) / l ^ 2 - 12 * (e5 - l) / l ^ 3) * (e7 + 1)) / 0.2e1 + ((22 * e4 / l ^ 2 - 30 * e6 / l ^ 3 + 11 * e8 / l ^ 2 + 30 * e2 / l ^ 3) * e4) / 0.2e1 + ((12 * e2 / l ^ 3 + 4 * e8 / l ^ 2 + 11 * e4 / l ^ 2 - 12 * e6 / l ^ 3) * e8) / 0.2e1 + ((-36 * e1 / l ^ 4 - 12 * (e7 - 1) / l ^ 3 - 30 * (e3 - 1) / l ^ 3 + 36 * (e5 - l) / l ^ 4) * (e5 + l)) / 0.2e1 + ((22 * (e3 - 1) / l ^ 2 - 30 * (e5 - l) / l ^ 3 + 11 * (e7 - 1) / l ^ 2 + 30 * e1 / l ^ 3) * (e3 + 1)) / 0.2e1 + ((36 * e1 / l ^ 4 + 12 * (e7 - 1) / l ^ 3 + 30 * (e3 - 1) / l ^ 3 - 36 * (e5 - l) / l ^ 4) * e1) / 0.2e1 + ((36 * e2 / l ^ 4 + 12 * e8 / l ^ 3 + 30 * e4 / l ^ 3 - 36 * e6 / l ^ 4) * e2) / 0.2e1)) * (l ^ 4) / 0.4e1 + (0.2e1 * ((e4 ^ 2) / 0.2e1 + ((e3 - 1) * (e3 + 1)) / 0.2e1) * (((-36 * e2 / l ^ 4 - 12 * e8 / l ^ 3 - 30 * e4 / l ^ 3 + 36 * e6 / l ^ 4) * e6) / 0.2e1 + ((12 * e1 / l ^ 3 + 4 * (e7 - 1) / l ^ 2 + 11 * (e3 - 1) / l ^ 2 - 12 * (e5 - l) / l ^ 3) * (e7 + 1)) / 0.2e1 + ((22 * e4 / l ^ 2 - 30 * e6 / l ^ 3 + 11 * e8 / l ^ 2 + 30 * e2 / l ^ 3) * e4) / 0.2e1 + ((12 * e2 / l ^ 3 + 4 * e8 / l ^ 2 + 11 * e4 / l ^ 2 - 12 * e6 / l ^ 3) * e8) / 0.2e1 + ((-36 * e1 / l ^ 4 - 12 * (e7 - 1) / l ^ 3 - 30 * (e3 - 1) / l ^ 3 + 36 * (e5 - l) / l ^ 4) * (e5 + l)) / 0.2e1 + ((22 * (e3 - 1) / l ^ 2 - 30 * (e5 - l) / l ^ 3 + 11 * (e7 - 1) / l ^ 2 + 30 * e1 / l ^ 3) * (e3 + 1)) / 0.2e1 + ((36 * e1 / l ^ 4 + 12 * (e7 - 1) / l ^ 3 + 30 * (e3 - 1) / l ^ 3 - 36 * (e5 - l) / l ^ 4) * e1) / 0.2e1 + ((36 * e2 / l ^ 4 + 12 * e8 / l ^ 3 + 30 * e4 / l ^ 3 - 36 * e6 / l ^ 4) * e2) / 0.2e1) + (((-8 * e4 / l - 6 * e2 / l ^ 2 + 6 * e6 / l ^ 2 - 2 * e8 / l) * e4) / 0.2e1 + (3 * e4 / l ^ 2 * e6) + (3 * (e3 - 1) / l ^ 2 * (e5 + l)) - ((e3 - 1) / l * (e7 + 1)) - (3 * e4 / l ^ 2 * e2) + ((-8 * (e3 - 1) / l - 6 * e1 / l ^ 2 + 6 * (e5 - l) / l ^ 2 - 2 * (e7 - 1) / l) * (e3 + 1)) / 0.2e1 - (3 * (e3 - 1) / l ^ 2 * e1) - (e4 / l * e8)) ^ 2) * (l ^ 3) / 0.3e1 + ((e4 ^ 2) / 0.2e1 + ((e3 - 1) * (e3 + 1)) / 0.2e1) * (((-8 * e4 / l - 6 * e2 / l ^ 2 + 6 * e6 / l ^ 2 - 2 * e8 / l) * e4) / 0.2e1 + (3 * e4 / l ^ 2 * e6) + (3 * (e3 - 1) / l ^ 2 * (e5 + l)) - ((e3 - 1) / l * (e7 + 1)) - (3 * e4 / l ^ 2 * e2) + ((-8 * (e3 - 1) / l - 6 * e1 / l ^ 2 + 6 * (e5 - l) / l ^ 2 - 2 * (e7 - 1) / l) * (e3 + 1)) / 0.2e1 - (3 * (e3 - 1) / l ^ 2 * e1) - (e4 / l * e8)) * (l ^ 2) + ((e4 ^ 2) / 0.2e1 + ((e3 - 1) * (e3 + 1)) / 0.2e1) ^ 2 * l) / 0.2e1 + Y * II * ((((-72 * e6 / l ^ 5 + 36 * e4 / l ^ 4 + 72 * e2 / l ^ 5 + 36 * e8 / l ^ 4) * e4 + (144 * e6 / l ^ 6 - 72 * e4 / l ^ 5 - 144 * e2 / l ^ 6 - 72 * e8 / l ^ 5) * e6 + (144 * e5 / l ^ 6 - 72 * e3 / l ^ 5 - 144 * e1 / l ^ 6 - 72 * e7 / l ^ 5) * e5 + (-144 * e5 / l ^ 6 + 72 * e3 / l ^ 5 + 144 * e1 / l ^ 6 + 72 * e7 / l ^ 5) * e1 + (-72 * e5 / l ^ 5 + 36 * e3 / l ^ 4 + 72 * e1 / l ^ 5 + 36 * e7 / l ^ 4) * e7 + (-72 * e5 / l ^ 5 + 36 * e3 / l ^ 4 + 72 * e1 / l ^ 5 + 36 * e7 / l ^ 4) * e3 + (-144 * e6 / l ^ 6 + 72 * e4 / l ^ 5 + 144 * e2 / l ^ 6 + 72 * e8 / l ^ 5) * e2 + (-72 * e6 / l ^ 5 + 36 * e4 / l ^ 4 + 72 * e2 / l ^ 5 + 36 * e8 / l ^ 4) * e8) * l ^ 3) / 0.3e1 + (((-48 * e3 / l ^ 3 - 84 * e1 / l ^ 4 - 36 * e7 / l ^ 3 + 84 * e5 / l ^ 4) * e3 + (-84 * e3 / l ^ 4 - 144 * e1 / l ^ 5 - 60 * e7 / l ^ 4 + 144 * e5 / l ^ 5) * e1 + (-48 * e4 / l ^ 3 - 84 * e2 / l ^ 4 - 36 * e8 / l ^ 3 + 84 * e6 / l ^ 4) * e4 + (-36 * e3 / l ^ 3 - 60 * e1 / l ^ 4 - 24 * e7 / l ^ 3 + 60 * e5 / l ^ 4) * e7 + (-84 * e4 / l ^ 4 - 144 * e2 / l ^ 5 - 60 * e8 / l ^ 4 + 144 * e6 / l ^ 5) * e2 + (84 * e3 / l ^ 4 + 144 * e1 / l ^ 5 + 60 * e7 / l ^ 4 - 144 * e5 / l ^ 5) * e5 + (-36 * e4 / l ^ 3 - 60 * e2 / l ^ 4 - 24 * e8 / l ^ 3 + 60 * e6 / l ^ 4) * e8 + (84 * e4 / l ^ 4 + 144 * e2 / l ^ 5 + 60 * e8 / l ^ 4 - 144 * e6 / l ^ 5) * e6) * l ^ 2) / 0.2e1 + ((36 * e1 / l ^ 4 + 12 * e7 / l ^ 3 - 36 * e5 / l ^ 4 + 24 * e3 / l ^ 3) * e1 * l) + ((12 * e1 / l ^ 3 + 4 * e7 / l ^ 2 - 12 * e5 / l ^ 3 + 8 * e3 / l ^ 2) * e7 * l) + ((-36 * e2 / l ^ 4 - 12 * e8 / l ^ 3 + 36 * e6 / l ^ 4 - 24 * e4 / l ^ 3) * e6 * l) + ((36 * e2 / l ^ 4 + 12 * e8 / l ^ 3 - 36 * e6 / l ^ 4 + 24 * e4 / l ^ 3) * e2 * l) + ((12 * e2 / l ^ 3 + 4 * e8 / l ^ 2 - 12 * e6 / l ^ 3 + 8 * e4 / l ^ 2) * e8 * l) + ((24 * e2 / l ^ 3 + 8 * e8 / l ^ 2 - 24 * e6 / l ^ 3 + 16 * e4 / l ^ 2) * e4 * l) + ((24 * e1 / l ^ 3 + 8 * e7 / l ^ 2 - 24 * e5 / l ^ 3 + 16 * e3 / l ^ 2) * e3 * l) + ((-36 * e1 / l ^ 4 - 12 * e7 / l ^ 3 + 36 * e5 / l ^ 4 - 24 * e3 / l ^ 3) * e5 * l)) / 0.2e1;
        KE(n) = 1/2*ve(:,n,i)'*M*ve(:,n,i);
    end
    keyboard
    PT(count) = sum(PE);
    KT(count) = sum(KE);
    ST(count) = sum(SE);
    T(count)  = Time(i);
    
    set(gca,'FontSize',12)
    plot(pn(1,:),pn(2,:),'black','LineWidth',3);
    hold on
    
    text(-0.15,0.1,['Time = ',num2str(Time(i))],'FontSize',15)
    text(-1.2,-1.2,{'Imad M Khan','Computational Dynamics Lab', 'Rensselaer Polytechnic Institute'},'FontSize',10,'EdgeColor','k','BackgroundColor',[1 1 1])
    
    plot(knot(1,:),knot(2,:),'bo')
    plot(0,0,'rx','MarkerSize',10,'LineWidth',3)
    hold off
    grid on
    xlabel('X-coordinate [m]','FontSize',12)
    ylabel('Y-coordinate [m]','FontSize',12)
    axis([-1.2*L 1.2*L -1.2*L 0.2*L])
    
    % NN     = getframe(h);
    % aviobj = addframe(aviobj,NN);
    count = count+1;
    pause(0.0001);
end
close(h)
close(vidObj);
